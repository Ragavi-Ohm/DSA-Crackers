#include<bits/stdc++.h>
// long long val(string str,int m,map<char,int>&mp)
// {
// 	long long ans=0;
//     for(int i=0;i<m;i++)
// 	{
// 		ans+=mp[str[i]]*pow(10,m-i-1);
// 	}
// 	return ans%(pow(2,32));
// }

vector<int> stringMatch(string text, string pattern) {
	// Write your code here.
	vector<int>v;
	int m=pattern.length();
	int n=text.length();
	int q=128;
	int x=11;
	int x_m=1;
	int hash_p=0,hash_t=0;
	for(int i=0;i<m-1;i++)
	{
		x_m=(x_m*x)%q;
	}
	for(int i=0;i<m;i++)
	{
		hash_p=(hash_p*x+pattern[i])%q;
		hash_t=(hash_t*x+text[i])%q;
	}
	for(int i=0;i<n-m+1;i++)
    {
		int flag=0;
		if(hash_p==hash_t)
		{
			
			for(int j=0;j<m;j++)
			{
				if(pattern[j]!=text[i+j])
				{
					flag=1;
					break;
				}
			}
			if(flag==0)
		    v.push_back(i+1);
		}
		if(i<n-m)
		{
			hash_t=(x*(hash_t-text[i]*x_m)+text[i+m])%q;
			if(hash_t<0)
			hash_t+=q;
		}
		
	}
	
	return v;
}
