#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
void bottom(BinaryTreeNode<int>* node,vector<int>&v)
{
    if(node==NULL)
    return;
    queue<pair<BinaryTreeNode<int>*,int>>q;
    map<int,int>mp;
    q.push({node,0});
    while(!q.empty())
    {
        auto it=q.front();
        BinaryTreeNode<int>* temp=it.first;
        int line=it.second;
        if(temp->left)
        q.push({temp->left,line-1});
        if(temp->right)
        q.push({temp->right,line+1});
        mp[line]=temp->data;
        q.pop();
    }
    for(auto it:mp)
    {
        v.push_back(it.second);
    }

}
vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
    vector<int>v;
    bottom(root,v);
    return v;
    
}
